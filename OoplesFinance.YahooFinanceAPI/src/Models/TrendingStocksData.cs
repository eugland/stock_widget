namespace OoplesFinance.YahooFinanceAPI.Models;

public record TrendingStocksCriteriaMeta(
        [property: JsonProperty("size", NullValueHandling = NullValueHandling.Ignore)] int? Size,
        [property: JsonProperty("offset", NullValueHandling = NullValueHandling.Ignore)] int? Offset,
        [property: JsonProperty("sortField", NullValueHandling = NullValueHandling.Ignore)] string SortField,
        [property: JsonProperty("sortType", NullValueHandling = NullValueHandling.Ignore)] string SortType,
        [property: JsonProperty("entityIdType", NullValueHandling = NullValueHandling.Ignore)] string EntityIdType,
        [property: JsonProperty("criteria", NullValueHandling = NullValueHandling.Ignore)] IReadOnlyList<TrendingStocksCriterion> Criteria,
        [property: JsonProperty("topOperator", NullValueHandling = NullValueHandling.Ignore)] string TopOperator
    );

public record TrendingStocksCriterion(
    [property: JsonProperty("field", NullValueHandling = NullValueHandling.Ignore)] string Field,
    [property: JsonProperty("operators", NullValueHandling = NullValueHandling.Ignore)] IReadOnlyList<string> Operators,
    [property: JsonProperty("values", NullValueHandling = NullValueHandling.Ignore)] IReadOnlyList<object> Values,
    [property: JsonProperty("labelsSelected", NullValueHandling = NullValueHandling.Ignore)] IReadOnlyList<int?> LabelsSelected,
    [property: JsonProperty("dependentValues", NullValueHandling = NullValueHandling.Ignore)] IReadOnlyList<object> DependentValues
);

public record TrendingStocksFinance(
    [property: JsonProperty("result", NullValueHandling = NullValueHandling.Ignore)] IReadOnlyList<TrendingStocksResult> Results,
    [property: JsonProperty("error", NullValueHandling = NullValueHandling.Ignore)] object Error
);

public record TrendingStocksQuote(
    [property: JsonProperty("language", NullValueHandling = NullValueHandling.Ignore)] string Language,
    [property: JsonProperty("region", NullValueHandling = NullValueHandling.Ignore)] string Region,
    [property: JsonProperty("quoteType", NullValueHandling = NullValueHandling.Ignore)] string QuoteType,
    [property: JsonProperty("typeDisp", NullValueHandling = NullValueHandling.Ignore)] string TypeDisp,
    [property: JsonProperty("quoteSourceName", NullValueHandling = NullValueHandling.Ignore)] string QuoteSourceName,
    [property: JsonProperty("triggerable", NullValueHandling = NullValueHandling.Ignore)] bool? Triggerable,
    [property: JsonProperty("customPriceAlertConfidence", NullValueHandling = NullValueHandling.Ignore)] string CustomPriceAlertConfidence,
    [property: JsonProperty("eventTypeName", NullValueHandling = NullValueHandling.Ignore)] string EventTypeName,
    [property: JsonProperty("tradeType", NullValueHandling = NullValueHandling.Ignore)] string TradeType,
    [property: JsonProperty("tradingHorizon", NullValueHandling = NullValueHandling.Ignore)] string TradingHorizon,
    [property: JsonProperty("pricePeriod", NullValueHandling = NullValueHandling.Ignore)] string PricePeriod,
    [property: JsonProperty("endDate", NullValueHandling = NullValueHandling.Ignore)] string EndDate,
    [property: JsonProperty("targetPrice", NullValueHandling = NullValueHandling.Ignore)] double? TargetPrice,
    [property: JsonProperty("targetPricePercentMove", NullValueHandling = NullValueHandling.Ignore)] double? TargetPricePercentMove,
    [property: JsonProperty("breakoutPrice", NullValueHandling = NullValueHandling.Ignore)] double? BreakoutPrice,
    [property: JsonProperty("trendChangeType", NullValueHandling = NullValueHandling.Ignore)] string TrendChangeType,
    [property: JsonProperty("averageAnalystRating", NullValueHandling = NullValueHandling.Ignore)] string AverageAnalystRating,
    [property: JsonProperty("postMarketChangePercent", NullValueHandling = NullValueHandling.Ignore)] double? PostMarketChangePercent,
    [property: JsonProperty("postMarketTime", NullValueHandling = NullValueHandling.Ignore)] int? PostMarketTime,
    [property: JsonProperty("postMarketPrice", NullValueHandling = NullValueHandling.Ignore)] double? PostMarketPrice,
    [property: JsonProperty("postMarketChange", NullValueHandling = NullValueHandling.Ignore)] double? PostMarketChange,
    [property: JsonProperty("regularMarketChange", NullValueHandling = NullValueHandling.Ignore)] double? RegularMarketChange,
    [property: JsonProperty("regularMarketTime", NullValueHandling = NullValueHandling.Ignore)] int? RegularMarketTime,
    [property: JsonProperty("regularMarketPrice", NullValueHandling = NullValueHandling.Ignore)] double? RegularMarketPrice,
    [property: JsonProperty("regularMarketDayHigh", NullValueHandling = NullValueHandling.Ignore)] double? RegularMarketDayHigh,
    [property: JsonProperty("regularMarketDayRange", NullValueHandling = NullValueHandling.Ignore)] string RegularMarketDayRange,
    [property: JsonProperty("regularMarketDayLow", NullValueHandling = NullValueHandling.Ignore)] double? RegularMarketDayLow,
    [property: JsonProperty("regularMarketVolume", NullValueHandling = NullValueHandling.Ignore)] long? RegularMarketVolume,
    [property: JsonProperty("regularMarketPreviousClose", NullValueHandling = NullValueHandling.Ignore)] double? RegularMarketPreviousClose,
    [property: JsonProperty("bid", NullValueHandling = NullValueHandling.Ignore)] double? Bid,
    [property: JsonProperty("ask", NullValueHandling = NullValueHandling.Ignore)] double? Ask,
    [property: JsonProperty("bidSize", NullValueHandling = NullValueHandling.Ignore)] int? BidSize,
    [property: JsonProperty("askSize", NullValueHandling = NullValueHandling.Ignore)] int? AskSize,
    [property: JsonProperty("market", NullValueHandling = NullValueHandling.Ignore)] string Market,
    [property: JsonProperty("messageBoardId", NullValueHandling = NullValueHandling.Ignore)] string MessageBoardId,
    [property: JsonProperty("fullExchangeName", NullValueHandling = NullValueHandling.Ignore)] string FullExchangeName,
    [property: JsonProperty("longName", NullValueHandling = NullValueHandling.Ignore)] string LongName,
    [property: JsonProperty("financialCurrency", NullValueHandling = NullValueHandling.Ignore)] string FinancialCurrency,
    [property: JsonProperty("regularMarketOpen", NullValueHandling = NullValueHandling.Ignore)] double? RegularMarketOpen,
    [property: JsonProperty("averageDailyVolume3Month", NullValueHandling = NullValueHandling.Ignore)] long? AverageDailyVolume3Month,
    [property: JsonProperty("averageDailyVolume10Day", NullValueHandling = NullValueHandling.Ignore)] long? AverageDailyVolume10Day,
    [property: JsonProperty("fiftyTwoWeekLowChange", NullValueHandling = NullValueHandling.Ignore)] double? FiftyTwoWeekLowChange,
    [property: JsonProperty("fiftyTwoWeekLowChangePercent", NullValueHandling = NullValueHandling.Ignore)] double? FiftyTwoWeekLowChangePercent,
    [property: JsonProperty("fiftyTwoWeekRange", NullValueHandling = NullValueHandling.Ignore)] string FiftyTwoWeekRange,
    [property: JsonProperty("fiftyTwoWeekHighChange", NullValueHandling = NullValueHandling.Ignore)] double? FiftyTwoWeekHighChange,
    [property: JsonProperty("fiftyTwoWeekHighChangePercent", NullValueHandling = NullValueHandling.Ignore)] double? FiftyTwoWeekHighChangePercent,
    [property: JsonProperty("dividendDate", NullValueHandling = NullValueHandling.Ignore)] int? DividendDate,
    [property: JsonProperty("earningsTimestamp", NullValueHandling = NullValueHandling.Ignore)] int? EarningsTimestamp,
    [property: JsonProperty("earningsTimestampStart", NullValueHandling = NullValueHandling.Ignore)] int? EarningsTimestampStart,
    [property: JsonProperty("earningsTimestampEnd", NullValueHandling = NullValueHandling.Ignore)] int? EarningsTimestampEnd,
    [property: JsonProperty("trailingAnnualDividendRate", NullValueHandling = NullValueHandling.Ignore)] double? TrailingAnnualDividendRate,
    [property: JsonProperty("trailingPE", NullValueHandling = NullValueHandling.Ignore)] double? TrailingPE,
    [property: JsonProperty("trailingAnnualDividendYield", NullValueHandling = NullValueHandling.Ignore)] double? TrailingAnnualDividendYield,
    [property: JsonProperty("fiftyTwoWeekLow", NullValueHandling = NullValueHandling.Ignore)] double? FiftyTwoWeekLow,
    [property: JsonProperty("fiftyTwoWeekHigh", NullValueHandling = NullValueHandling.Ignore)] double? FiftyTwoWeekHigh,
    [property: JsonProperty("shortName", NullValueHandling = NullValueHandling.Ignore)] string ShortName,
    [property: JsonProperty("marketState", NullValueHandling = NullValueHandling.Ignore)] string MarketState,
    [property: JsonProperty("epsTrailingTwelveMonths", NullValueHandling = NullValueHandling.Ignore)] double? EpsTrailingTwelveMonths,
    [property: JsonProperty("epsForward", NullValueHandling = NullValueHandling.Ignore)] double? EpsForward,
    [property: JsonProperty("epsCurrentYear", NullValueHandling = NullValueHandling.Ignore)] double? EpsCurrentYear,
    [property: JsonProperty("priceEpsCurrentYear", NullValueHandling = NullValueHandling.Ignore)] double? PriceEpsCurrentYear,
    [property: JsonProperty("sharesOutstanding", NullValueHandling = NullValueHandling.Ignore)] long? SharesOutstanding,
    [property: JsonProperty("bookValue", NullValueHandling = NullValueHandling.Ignore)] double? BookValue,
    [property: JsonProperty("fiftyDayAverage", NullValueHandling = NullValueHandling.Ignore)] double? FiftyDayAverage,
    [property: JsonProperty("fiftyDayAverageChange", NullValueHandling = NullValueHandling.Ignore)] double? FiftyDayAverageChange,
    [property: JsonProperty("fiftyDayAverageChangePercent", NullValueHandling = NullValueHandling.Ignore)] double? FiftyDayAverageChangePercent,
    [property: JsonProperty("twoHundredDayAverage", NullValueHandling = NullValueHandling.Ignore)] double? TwoHundredDayAverage,
    [property: JsonProperty("twoHundredDayAverageChange", NullValueHandling = NullValueHandling.Ignore)] double? TwoHundredDayAverageChange,
    [property: JsonProperty("twoHundredDayAverageChangePercent", NullValueHandling = NullValueHandling.Ignore)] double? TwoHundredDayAverageChangePercent,
    [property: JsonProperty("marketCap", NullValueHandling = NullValueHandling.Ignore)] object MarketCap,
    [property: JsonProperty("forwardPE", NullValueHandling = NullValueHandling.Ignore)] double? ForwardPE,
    [property: JsonProperty("priceToBook", NullValueHandling = NullValueHandling.Ignore)] double? PriceToBook,
    [property: JsonProperty("sourceInterval", NullValueHandling = NullValueHandling.Ignore)] int? SourceInterval,
    [property: JsonProperty("exchangeDataDelayedBy", NullValueHandling = NullValueHandling.Ignore)] int? ExchangeDataDelayedBy,
    [property: JsonProperty("exchangeTimezoneName", NullValueHandling = NullValueHandling.Ignore)] string ExchangeTimezoneName,
    [property: JsonProperty("exchangeTimezoneShortName", NullValueHandling = NullValueHandling.Ignore)] string ExchangeTimezoneShortName,
    [property: JsonProperty("pageViewGrowthWeekly", NullValueHandling = NullValueHandling.Ignore)] double? PageViewGrowthWeekly,
    [property: JsonProperty("gmtOffSetMilliseconds", NullValueHandling = NullValueHandling.Ignore)] int? GmtOffSetMilliseconds,
    [property: JsonProperty("currency", NullValueHandling = NullValueHandling.Ignore)] string Currency,
    [property: JsonProperty("regularMarketChangePercent", NullValueHandling = NullValueHandling.Ignore)] double? RegularMarketChangePercent,
    [property: JsonProperty("firstTradeDateMilliseconds", NullValueHandling = NullValueHandling.Ignore)] object FirstTradeDateMilliseconds,
    [property: JsonProperty("priceHint", NullValueHandling = NullValueHandling.Ignore)] int? PriceHint,
    [property: JsonProperty("exchange", NullValueHandling = NullValueHandling.Ignore)] string Exchange,
    [property: JsonProperty("esgPopulated", NullValueHandling = NullValueHandling.Ignore)] bool? EsgPopulated,
    [property: JsonProperty("tradeable", NullValueHandling = NullValueHandling.Ignore)] bool? Tradeable,
    [property: JsonProperty("cryptoTradeable", NullValueHandling = NullValueHandling.Ignore)] bool? CryptoTradeable,
    [property: JsonProperty("displayName", NullValueHandling = NullValueHandling.Ignore)] string DisplayName,
    [property: JsonProperty("symbol", NullValueHandling = NullValueHandling.Ignore)] string Symbol
);

public record TrendingStocksResult(
    [property: JsonProperty("id", NullValueHandling = NullValueHandling.Ignore)] string Id,
    [property: JsonProperty("title", NullValueHandling = NullValueHandling.Ignore)] string Title,
    [property: JsonProperty("description", NullValueHandling = NullValueHandling.Ignore)] string Description,
    [property: JsonProperty("canonicalName", NullValueHandling = NullValueHandling.Ignore)] string CanonicalName,
    [property: JsonProperty("criteriaMeta", NullValueHandling = NullValueHandling.Ignore)] TrendingStocksCriteriaMeta CriteriaMeta,
    [property: JsonProperty("rawCriteria", NullValueHandling = NullValueHandling.Ignore)] string RawCriteria,
    [property: JsonProperty("start", NullValueHandling = NullValueHandling.Ignore)] int? Start,
    [property: JsonProperty("count", NullValueHandling = NullValueHandling.Ignore)] int? Count,
    [property: JsonProperty("total", NullValueHandling = NullValueHandling.Ignore)] int? Total,
    [property: JsonProperty("quotes", NullValueHandling = NullValueHandling.Ignore)] IReadOnlyList<TrendingStocksQuote> Quotes,
    [property: JsonProperty("useRecords", NullValueHandling = NullValueHandling.Ignore)] bool? UseRecords,
    [property: JsonProperty("predefinedScr", NullValueHandling = NullValueHandling.Ignore)] bool? PredefinedScr,
    [property: JsonProperty("versionId", NullValueHandling = NullValueHandling.Ignore)] int? VersionId,
    [property: JsonProperty("creationDate", NullValueHandling = NullValueHandling.Ignore)] long? CreationDate,
    [property: JsonProperty("lastUpdated", NullValueHandling = NullValueHandling.Ignore)] long? LastUpdated,
    [property: JsonProperty("isPremium", NullValueHandling = NullValueHandling.Ignore)] bool? IsPremium,
    [property: JsonProperty("iconUrl", NullValueHandling = NullValueHandling.Ignore)] string IconUrl
);

public record TrendingStocksData(
    [property: JsonProperty("finance", NullValueHandling = NullValueHandling.Ignore)] TrendingStocksFinance Finance
);